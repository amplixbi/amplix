package ${PACKAGE_NAME};

import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.amplix.rpc.igcJob;
import com.amplix.rpc.igcServer;

import com.amplix.service.common.MetaObject;
import com.amplix.service.common.CUserDB;
import com.amplix.service.dbpool.DBConnectionPool;

${IMPORT_CLASSES}

public class ${CLASS_NAME}
	extends igcJob
{
	private static final Logger logger = LoggerFactory.getLogger(${CLASS_NAME}.class);
	
	public void execute()
	{
		Connection con = null;
		PreparedStatement pstmt = null;
		
		try
		{
	        con = p_daemon.connMgr.getConnection(igcServer.IGCBASE);
	        
	        logger.info("------------ start custom code execution");
	        
	        ${JAVA_SOURCE}
	        
	        logger.info("------------ custom code execution completed");
		}
		catch (Exception ex)
		{
			logger.error("execute quartz job", ex);
		}
		finally
		{
			try
			{
				if (pstmt != null)
					pstmt.close();
				pstmt = null;
			}
			catch (Exception e)
			{
			}
			
			if (p_daemon != null)
			{
				p_daemon.connMgr.freeConnection(igcServer.IGCBASE, con);
			}
		}
	}
	
	${JAVA_EXTRA}
	
	protected DBConnectionPool getConnectionPool(Connection con_meta, String pname)
		throws Exception
	{
		MetaObject userpool = p_procbase.GetObjectID(con_meta, this.security, "/Connections/" + pname, -1);
		CUserDB db = (CUserDB) p_procbase.readMetaContent(con_meta, security, userpool, 3);
		userpool.setMetaContent(con_meta, security, this.p_procbase, db);
		DBConnectionPool pool = db.registerConnectionPool(con_meta, this.p_procbase, this.security, this.p_daemon);
		return pool;
	}
	
	@Override
	public void dispose() {
		
	}
}
